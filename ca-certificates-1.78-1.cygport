DESCRIPTION="CA root certificates (from Mozilla)"
HOMEPAGE="http://www.mozilla.org/projects/security/certs/"
SRC_URI="fedora/certdata.txt fedora/blacklist.txt fedora/certdata2pem.py"
SRC_DIR=.

CYGPORT_USE_UNSTABLE_API=1
src_unpack_hook() {
	sed -e '1,/BEGIN LICENSE BLOCK/d;/END LICENSE BLOCK/,$d;s/^# *//g' certdata.txt > COPYING
}

src_compile() {
	mkdir -p ${B}/certs
	cd ${B}/certs
	cp ${S}/*.txt .
	python ${S}/certdata2pem.py
	cd ${B}
	(
		cat <<EOF
# This is a bundle of X.509 certificates of public Certificate
# Authorities.  It was generated from the Mozilla root CA list.
#
# Source: mozilla/security/nss/lib/ckfw/builtins/certdata.txt
#
# Generated from:
EOF
		ident -q ${S}/certdata.txt | sed '1d;s/^/#/';
		echo '#';
	) > ca-bundle.crt
	(
		cat <<EOF
# This is a bundle of X.509 certificates of public Certificate
# Authorities.  It was generated from the Mozilla root CA list.
# These certificates are in the OpenSSL "TRUSTED CERTIFICATE"
# format and have trust bits set accordingly.
#
# Source: mozilla/security/nss/lib/ckfw/builtins/certdata.txt
#
# Generated from:
EOF
		ident -q ${S}/certdata.txt | sed '1d;s/^/#/';
		echo '#';
	) > ca-bundle.trust.crt

	for f in certs/*.crt
	do
		tbits=`sed -n '/^# openssl-trust/{s/^.*=//;p;}' $f`
		case $tbits in
		  *serverAuth*) openssl x509 -text -in "$f" >> ca-bundle.crt ;;
		esac

		if [ -n "$tbits" ]
		then
			targs=""
			for t in $tbits
			do
				targs="${targs} -addtrust $t"
			done
			openssl x509 -text -in "$f" -trustout $targs >> ca-bundle.trust.crt
		fi
	done
}

src_install() {
	insinto /usr/ssl/certs
	doins ${B}/*.crt
}
